* Full Adder Implementation
* Using two Half Adders and an OR gate

* Supply voltage
Vdd vdd 0 5

* Input voltage sources (for testing)
VA a 0 PULSE(0 5 0 1n 1n 50n 100n)     ; Input A
VB b 0 PULSE(0 5 0 1n 1n 100n 200n)    ; Input B
VCin cin 0 PULSE(0 5 0 1n 1n 200n 400n) ; Carry In

* First Half Adder
XHA1 a b vdd 0 sum1 carry1 HALF_ADDER

* Second Half Adder
XHA2 sum1 cin vdd 0 final_sum carry2 HALF_ADDER

* OR gate for final carry
XU1 carry1 carry2 vdd 0 final_carry OR

* Simulation directives
.tran 0 800n
.model NMOS NMOS
.model PMOS PMOS
.lib standard.txt

* Subcircuits
.subckt HALF_ADDER a b vdd vss sum carry
* Inverters
XU1 a vdd vss a_inv INVERT
XU2 b vdd vss b_inv INVERT
* NAND gates for XOR (sum)
XU3 a_inv b vdd vss nand1 NAND
XU4 a b_inv vdd vss nand2 NAND
XU5 nand1 nand2 vdd vss sum NAND
* AND gate for carry
XU6 a b vdd vss carry AND
.ends

.subckt OR in1 in2 vdd vss out
XU1 in1 vdd vss n1 INVERT
XU2 in2 vdd vss n2 INVERT
XU3 n1 n2 vdd vss out NAND
.ends

* Include other subcircuits from half_adder.asc
.include half_adder.asc

.end